{"version":3,"sources":["components/SearchBar.js","components/SortButtons.js","components/NoResult.js","components/DisplayCrypto.js","components/ResultList.js","App.js","index.js"],"names":["SearchBar","handleSubmit","e","preventDefault","_this","props","onSearch","searchValue","_this$props","this","onChange","react_default","a","createElement","onSubmit","type","name","value","placeholder","id","className","Component","SortButtons","sortByName","sortByRank","sortByPrice","refreshButton","onClick","NoResult","class","DisplayCrypto","cryptoData","redOrGreenNumber","numberWithCommas","index_es","coin","symbol","rank","parseFloat","price_usd","toFixed","market_cap_usd","percent_change_24h","ResultList","results","data","length","map","crypto","index","components_DisplayCrypto","key","components_NoResult","App","state","cryptos","loading","result","ascendingName","ascendingRank","ascendingPrice","getData","axios","get","then","response","setState","catch","error","console","log","performSearch","inputValue","toLowerCase","firstChar","filter","includingWord","includes","handleChange","target","sort","b","localeCompare","color","number","style","x","toString","replace","components_SearchBar","components_SortButtons","components_ResultList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.73802292.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SearchBar extends Component {\r\n    // const {} = this.props;\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSearch(this.props.searchValue);\r\n        // e.currentTarget.reset();\r\n    }\r\n\r\n    render() {\r\n        const { searchValue, onChange } = this.props;\r\n\r\n        return (\r\n            <form onSubmit={ this.handleSubmit } >\r\n                {/* <label htmlFor=\"search\">Search</label> */}\r\n                <input \r\n                    type=\"search\" \r\n                    name=\"search\" \r\n                    value={ searchValue }\r\n                    onChange={ onChange }\r\n                    placeholder=\"Search Coins\" />\r\n                <button type=\"submit\" id=\"submit\" className=\"search-button\"><i className=\"fa fa-search\"></i></button>\r\n            </form>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default SearchBar;\r\n\r\n// this.props.onSearch(this.search.value);\r\n\r\n// ref={(input) => this.search = input}\r\n","import React from 'react';\r\n\r\nconst SortButtons = props => {\r\n    const {sortByName, sortByRank, sortByPrice, refreshButton} = props;\r\n\r\n    return (\r\n        <div className=\"sort-buttons\">\r\n            <button onClick={ sortByName } >Sort by Name</button>\r\n            <button onClick={ sortByRank } >Sort by Rank</button>\r\n            <button onClick={ sortByPrice } >Sort by Price</button> \r\n            <i className=\"fas fa-sync-alt icon\" onClick={ refreshButton }></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SortButtons;","import React from 'react';\r\n\r\nconst NoResult = props => {\r\n    // const {} = props;\r\n    \r\n    return (\r\n        <li className='no-gifs'>\r\n            <p><i class=\"fas fa-robot\"></i></p>\r\n            <h3 className=\"oops\">Oops!</h3>\r\n            <h3 className=\"no-result-found\">No Results Found</h3>\r\n            <p>We can't seem to find the coin(s) you're looking for.</p>\r\n        </li> \r\n    );\r\n}\r\n\r\nexport default NoResult;","import React from 'react';\r\nimport CryptoIcon from 'react-webfont-cryptocoins'   //https://github.com/keyvanm/react-webfont-cryptocoins\r\n\r\nconst DisplayCrypto = props => {\r\n    const { cryptoData, redOrGreenNumber, numberWithCommas } = props;\r\n\r\n    return (\r\n        <li>\r\n            <div className=\"coin-log-rank\">\r\n                <CryptoIcon coin={ cryptoData.symbol } />\r\n                <p className=\"crypto-name\"><span>{ cryptoData.symbol }</span> | { cryptoData.name }</p>\r\n                <p className=\"crypto-rank\">Rank: #{ cryptoData.rank }</p>\r\n            </div>\r\n            <div>\r\n                <p>Price: $ { (parseFloat(cryptoData.price_usd) > 0 && parseFloat(cryptoData.price_usd) < 1)\r\n                                ? parseFloat(cryptoData.price_usd).toFixed(6)\r\n                                : numberWithCommas(parseFloat(cryptoData.price_usd).toFixed(2)) }</p>\r\n                <p>Market Cap: $ { numberWithCommas(parseFloat(cryptoData.market_cap_usd).toFixed(2)) }</p>\r\n                <p>Volume(24h): $ { numberWithCommas(parseFloat(cryptoData[\"24h_volume_usd\"]).toFixed(2)) }</p>\r\n                { redOrGreenNumber(cryptoData.percent_change_24h) }\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default DisplayCrypto;\r\n\r\n// way to get the property key that starts with a number? --> using bracket notation!! ex. myObject[\"myProperty\"]","import React from 'react';\r\nimport NoResult from './NoResult';\r\nimport DisplayCrypto from './DisplayCrypto';\r\n\r\nconst ResultList = props => {\r\n    const {data, redOrGreenNumber, numberWithCommas} = props;\r\n    \r\n    let  results;\r\n    if (data.length > 0) {\r\n        results = data.map( (crypto, index) => \r\n            <DisplayCrypto \r\n                cryptoData={ crypto } \r\n                redOrGreenNumber={ redOrGreenNumber }  \r\n                numberWithCommas={ numberWithCommas } \r\n                key={ index } \r\n            />);\r\n    } else {\r\n        results = <NoResult />;\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {results}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ResultList;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport SearchBar from './components/SearchBar';\nimport SortButtons from './components/SortButtons';\nimport ResultList from './components/ResultList';\n\nexport default class App extends Component {\n  state = {\n    cryptos: [],\n    loading: true,\n    result: [],\n    ascendingName: false,\n    ascendingRank: true,\n    ascendingPrice: true,\n    searchValue: ''\n  }\n\n  componentDidMount(){\n    this.getData();\n    console.log('from didMount');\n    \n\n  }\n\n  getData = () => {\n    axios.get(`https://api.coinmarketcap.com/v1/ticker/?limit=2000`)\n      .then(response => {\n        this.setState({\n          cryptos: response.data,\n          loading: false,\n          result: response.data,\n          ascendingName: false,\n          ascendingRank: true,\n          ascendingPrice: true,\n          searchValue: ''\n        });\n      })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n  }\n\n  performSearch = (inputValue) => {    \n    // can search by name, symbol\n    console.log(inputValue.toLowerCase());\n    \n    if (inputValue.length === 1) {\n        let firstChar = this.state.cryptos.filter((crypto) => {\n            let name = crypto.name.toLowerCase()[0] === inputValue;\n            let symbol = crypto.symbol.toLowerCase()[0] === inputValue;\n            return name || symbol;\n        })\n        this.setState({\n          result: firstChar\n        });\n    } else if (inputValue.length > 1) {\n        let includingWord = this.state.cryptos.filter((crypto) => {\n            let name =  crypto.name.toLowerCase().includes(inputValue);\n            let symbol =  crypto.symbol.toLowerCase().includes(inputValue);\n            return name || symbol;         \n        })\n        this.setState({\n          result: includingWord\n        });\n    } else if (inputValue === '') {  //for empty search value\n        /* this.setState({\n          result: this.state.cryptos\n        }); */\n        this.getData();\n    }     \n  }\n\n  handleChange = e => {\n    this.setState({\n      searchValue: e.target.value\n    });\n  }\n\n  sortByName = () => {\n    let sortByName;\n    if ( this.state.ascendingName === false ) {\n      sortByName = this.state.result.sort((a, b) => \n        // a.name === b.name ? 0 : a.name < b.name ? -1 : 1\n        a.symbol.localeCompare(b.symbol)\n      );\n      this.setState({\n        ascendingName: true\n      });\n    } else {\n      sortByName = this.state.result.sort((a, b) => \n        // a.name === b.name ? 0 : a.name > b.name ? -1 : 1\n        b.symbol.localeCompare(a.symbol)\n      );\n      this.setState({\n        ascendingName: false\n      });\n    }\n    return this.setState({\n      result: sortByName,\n      searchValue: ''\n    });\n  }\n\n  sortByRank = () => {\n    let sortByRank;\n    if ( this.state.ascendingRank === false ) {\n      sortByRank = this.state.result.sort((a, b) => a.rank - b.rank)\n      this.setState({\n        ascendingRank: true\n      });\n    } else {\n      sortByRank = this.state.result.sort((a, b) => b.rank - a.rank)\n      this.setState({\n        ascendingRank: false\n      });\n    }\n    return this.setState({\n      result: sortByRank,\n      searchValue: ''\n    });\n  }\n\n  sortByPrice = () => {\n    let sortByPrice;\n    if ( this.state.ascendingPrice === false ) {\n      sortByPrice = this.state.result.sort((a, b) => a.price_usd - b.price_usd)\n      this.setState({\n        ascendingPrice: true\n      });\n    } else {\n      sortByPrice = this.state.result.sort((a, b) => b.price_usd - a.price_usd)\n      this.setState({\n        ascendingPrice: false\n      });\n    }\n    return this.setState({\n      result: sortByPrice,\n      searchValue: ''\n    });\n  }\n\n  redOrGreenNumber = (value) => {\n    let number = parseFloat(value).toFixed(2);\n    let color;\n    if(number >= 0) {\n      color = {\n        color: '#60be68'\n      };\n    } else { \n      color = {\n        color: '#dd0d0d' \n      }\n    }\n\n    return (\n      <p style={color} >Change(24h): <span>{ this.numberWithCommas(number) }%</span></p>\n    );\n  }\n\n  numberWithCommas = (x) => {\n    if (x === null) {\n        return 0;\n    }\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <div className=\"title\">\n            <h1>Cryptocurrencies</h1>\n            <p>Default: sorted by rank#</p>\n          </div>\n          <SearchBar \n            searchValue={ this.state.searchValue }\n            onChange={ this.handleChange }\n            onSearch={ this.performSearch } \n          />\n        </header>\n        <main>\n          <SortButtons \n            sortByName={ this.sortByName } \n            sortByRank={ this.sortByRank } \n            sortByPrice={ this.sortByPrice }\n            refreshButton={ this.getData }\n          />\n          {\n            (this.state.loading)\n            ? <p className=\"loading-sign\">Loading...</p>\n            : <ResultList \n                data={ this.state.result } \n                redOrGreenNumber={ this.redOrGreenNumber }\n                numberWithCommas={ this.numberWithCommas }\n              />  \n          }\n        </main>\n      </div> \n    );\n  }\n}\n\n\n/* Your application will provide the following information:\n·         the number of cryptocurrency coins\n·         the name of the coins\n·         the price of the coin\n·         the rank of the coin\n·         the change in price of the coin\n\nFeatures\n1.       Display cryptocurrency coins with the required information\n2.       Filter the coins by name using input element\n\nAdditional Features:\nSort by name\nSort by price\nSort by rank\n\n*/\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}